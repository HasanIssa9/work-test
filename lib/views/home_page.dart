import 'package:firebase_database/firebase_database.dart';import 'package:flutter/material.dart';import 'package:intl/intl.dart' hide TextDirection;import 'package:work_app/extensions/dropdown_input.dart';import 'package:work_app/extensions/text_input.dart';import 'package:work_app/views/students_page.dart';class HomePage extends StatefulWidget {  const HomePage({super.key});  @override  State<HomePage> createState() => _HomePageState();}class _HomePageState extends State<HomePage> {  DatabaseReference dbstd = FirebaseDatabase.instance.ref();  final _formKey = GlobalKey<FormState>();  final TextEditingController number = TextEditingController();  final TextEditingController name = TextEditingController();  String? couValue = '';  String? empValue = '';  String? speValue = '';  String? selectedDate = DateFormat('y-MM-d').format(DateTime.now());  @override  Widget build(BuildContext context) {    return Directionality(        textDirection: TextDirection.rtl,        child: Scaffold(          appBar: AppBar(            leading: IconButton(              onPressed: () {                Navigator.push(                  context,                  MaterialPageRoute(builder: (context) => const StudentsPage()),                );              },              icon: const Icon(Icons.group),            ),            elevation: 0,          ),          body: Container(            child: Column(              children: [                const Center(                    child: Text(                  'سجل أستلام كشوف \n   الطلبة الوافدين',                  style: TextStyle(fontWeight: FontWeight.bold, fontSize: 25),                )),                Expanded(                  child: SingleChildScrollView(                    child: Container(                      height: MediaQuery.sizeOf(context).height * 0.75,                      padding: const EdgeInsets.symmetric(horizontal: 12.0),                      child: Form(                        key: _formKey,                        child: Column(                          mainAxisAlignment: MainAxisAlignment.spaceEvenly,                          crossAxisAlignment: CrossAxisAlignment.start,                          children: [                            TextInput(                              hintName: 'تسلسل: ',                              isNumber: true,                              controller: number,                            ),                            TextInput(                              hintName: 'أسم الطالب: ',                              controller: name,                            ),                            DropdownInput(                              isCou: true,                              onChanged: (value) {                                couValue = value;                              },                            ),                            DropdownInput(                              onChanged: (value) {                                speValue = value;                              },                            ),                            DropdownInput(                                isEmp: true,                                onChanged: (value) {                                  empValue = value;                                }),                            Row(                              children: [                                const Icon(                                  Icons.date_range_rounded,                                  color: Colors.lightGreen,                                ),                                SizedBox(width: 19,),                                Container(                                  height: 60,                                  width: MediaQuery.sizeOf(context).width * 0.496,                                  padding: const EdgeInsets.symmetric(                                      horizontal: 12,vertical: 15),                                  decoration: BoxDecoration(                                    border: Border.all(                                      color: Colors.lightGreen,                                      width: 2,                                    ),                                    borderRadius: BorderRadius.circular(16),                                  ),                                  child: GestureDetector(                                    onTap: () async {                                      try {                                        final DateTime? picked =                                            await showDatePicker(                                                context: context,                                                initialDate: DateTime.now(),                                                firstDate: DateTime.now()                                                    .subtract(const Duration(                                                        days: 90)),                                                lastDate: DateTime.now().add(                                                    const Duration(days: 90)));                                        if (picked != null &&                                            picked != selectedDate) {                                          setState(() {                                            selectedDate = DateFormat('y-MM-d')                                                .format(picked);                                          });                                        }                                      } catch (e) {                                        print('Error parsing date: $e');                                      }                                    },                                    child: Text(                                      selectedDate!,                                      style: const TextStyle(                                        fontSize: 18,                                      ),                                    ),                                  ),                                ),                              ],                            ),                            SizedBox(height: 25,),                            Center(                              child: ElevatedButton.icon(                                style: ElevatedButton.styleFrom(                                    backgroundColor: Colors.cyan,                                    padding:                                    const EdgeInsets.symmetric(horizontal: 28, vertical: 8),                                    foregroundColor: Colors.black,                                    textStyle:                                    const TextStyle(fontWeight: FontWeight.bold, fontSize: 22)),                                onPressed: () {                                  if (_formKey.currentState!.validate()) {                                    dbstd.push().set({                                    });                                    ScaffoldMessenger.of(context).showSnackBar(                                      const SnackBar(                                          content: Text('Processing Data')),                                    );                                  }                                },                                icon: const Icon(Icons.add),                                label: const Text('اضافة طالب'),                              ),                            )                          ],                        ),                      ),                    ),                  ),                ),              ],            ),          ),        ));  }}