import 'package:firebase_database/firebase_database.dart';import 'package:flutter/foundation.dart';import 'package:flutter/material.dart';import 'package:intl/intl.dart' hide TextDirection;import 'package:work_app/extensions/dropdown_input.dart';import 'package:work_app/extensions/text_input.dart';import 'package:work_app/views/students_page.dart';class HomePage extends StatefulWidget {  const HomePage({super.key});  @override  State<HomePage> createState() => _HomePageState();}class _HomePageState extends State<HomePage> {  final dbstd = FirebaseDatabase.instance.ref().child('data');  final _formKey = GlobalKey<FormState>();  final TextEditingController number = TextEditingController();  final TextEditingController name = TextEditingController();  String? couValue = '';  String? empValue = '';  String? speValue = '';  String? selectedDate = DateFormat('y-MM-d').format(DateTime.now());  Future<bool> rootFirebaseIsExists(DatabaseReference databaseReference) async {    final snapshot = await databaseReference.once();    if (snapshot == null) {      print("Item doesn't exist in the db");    } else {      print("Item exists in the db");    }    return snapshot != null;  }  @override  Widget build(BuildContext context) {    return Directionality(      textDirection: TextDirection.rtl,      child: Scaffold(        appBar: (!kIsWeb)            ? AppBar(                leading: IconButton(                  onPressed: () {                    Navigator.push(                      context,                      MaterialPageRoute(                          builder: (context) => const StudentsPage()),                    );                  },                  icon: const Icon(Icons.group),                ),                elevation: 0,              )            : null,        body: Center(          child: Container(            padding: (kIsWeb) ? const EdgeInsets.all(20) : null,            margin: (kIsWeb) ? const EdgeInsets.all(20) : null,            width: (kIsWeb) ? MediaQuery.sizeOf(context).width * 0.75 : null,            decoration: (kIsWeb)                ? BoxDecoration(                    borderRadius: BorderRadius.circular(16),                    border: Border.all(color: Colors.lightGreen, width: 6))                : null,            child: Row(              children: [                Expanded(                    child: Column(                  children: [                    const Center(                        child: Text(                      'سجل أستلام كشوف \n   الطلبة الوافدين',                      style:                          TextStyle(fontWeight: FontWeight.bold, fontSize: 25),                    )),                    Expanded(                      child: SingleChildScrollView(                        child: Container(                          height: MediaQuery.sizeOf(context).height * 0.75,                          padding: const EdgeInsets.symmetric(horizontal: 14),                          child: Form(                            key: _formKey,                            child: Column(                              mainAxisAlignment: MainAxisAlignment.spaceEvenly,                              crossAxisAlignment: CrossAxisAlignment.start,                              children: [                                TextInput(                                  hintName: 'تسلسل: ',                                  isNumber: true,                                  controller: number,                                ),                                TextInput(                                  hintName: 'أسم الطالب: ',                                  controller: name,                                ),                                DropdownInput(                                  isCou: true,                                  onChanged: (value) {                                    couValue = value;                                  },                                ),                                DropdownInput(                                  onChanged: (value) {                                    speValue = value;                                  },                                ),                                DropdownInput(                                    isEmp: true,                                    onChanged: (value) {                                      empValue = value;                                    }),                                Row(                                  children: [                                    const Icon(                                      Icons.date_range_rounded,                                      color: Colors.lightGreen,                                    ),                                    const SizedBox(                                      width: 19,                                    ),                                    Container(                                      height: 60,                                      width: (!kIsWeb)                                          ? MediaQuery.sizeOf(context).width *                                              0.496                                          : MediaQuery.sizeOf(context).width *                                              0.25,                                      padding: const EdgeInsets.symmetric(                                          horizontal: 12, vertical: 15),                                      decoration: BoxDecoration(                                        border: Border.all(                                          color: Colors.lightGreen,                                          width: 2,                                        ),                                        borderRadius: BorderRadius.circular(16),                                      ),                                      child: GestureDetector(                                        onTap: () async {                                          try {                                            final DateTime? picked =                                                await showDatePicker(                                                    context: context,                                                    initialDate: DateTime.now(),                                                    firstDate: DateTime.now()                                                        .subtract(                                                            const Duration(                                                                days: 90)),                                                    lastDate: DateTime.now()                                                        .add(const Duration(                                                            days: 90)));                                            if (picked != null &&                                                picked != selectedDate) {                                              setState(() {                                                selectedDate =                                                    DateFormat('y-MM-d')                                                        .format(picked);                                              });                                            }                                          } catch (e) {                                            print('Error parsing date: $e');                                          }                                        },                                        child: Text(                                          selectedDate!,                                          style: const TextStyle(                                            fontSize: 18,                                          ),                                        ),                                      ),                                    ),                                  ],                                ),                                const SizedBox(                                  height: 25,                                ),                                Center(                                  child: ElevatedButton.icon(                                    style: ElevatedButton.styleFrom(                                        backgroundColor: Colors.cyan,                                        padding: const EdgeInsets.symmetric(                                            horizontal: 28, vertical: 8),                                        foregroundColor: Colors.black,                                        textStyle: const TextStyle(                                            fontWeight: FontWeight.bold,                                            fontSize: 22)),                                    onPressed: () {                                      if (_formKey.currentState!.validate()) {                                        dbstd.push().set({                                          'conName': couValue,                                          'date': selectedDate,                                          'empName': empValue,                                          'id': number.text,                                          'speName': speValue,                                          'stdName': name.text                                        }).asStream();                                        ScaffoldMessenger.of(context)                                            .showSnackBar(                                          const SnackBar(                                              content: Text('Processing Data')),                                        );                                      }                                    },                                    icon: const Icon(Icons.add),                                    label: const Text('اضافة طالب'),                                  ),                                )                              ],                            ),                          ),                        ),                      ),                    ),                  ],                )),                (kIsWeb)                    ? const VerticalDivider(                        color: Colors.lightGreen,                        thickness: 6,                      )                    : Container(),                (kIsWeb) ? const Expanded(child: StudentsPage()) : Container(),              ],            ),          ),        ),      ),    );  }}