import 'dart:async';import 'package:dropdown_button2/dropdown_button2.dart';import 'package:firebase_database/firebase_database.dart';import 'package:flutter/foundation.dart';import 'package:flutter/material.dart';class DropdownInput extends StatelessWidget {  DropdownInput({    super.key,    this.isCou = false,    this.isEmp = false,    required this.onChanged,  });  final bool isCou;  final bool isEmp;  final Function(String?) onChanged;  final TextEditingController controller = TextEditingController();  final _formKey = GlobalKey<FormState>();  final dbcou = FirebaseDatabase.instance.ref().child('countries');  final dbemp = FirebaseDatabase.instance.ref().child('employees');  final dbspe = FirebaseDatabase.instance.ref().child('specializations');  Stream<List<String>> dropdownDataStream() {    StreamController<List<String>> controller =        StreamController<List<String>>();    DatabaseReference qurey = (isCou)        ? dbcou        : (isEmp)            ? dbemp            : dbspe;    qurey.onValue.listen((event) {      final data = Map<String, dynamic>.from(event.snapshot.value as Map);      List<String> items = [];      data.forEach((key, value) {        items.add(value['text'].toString());      });      controller.add(items);    });    return controller.stream;  }  @override  Widget build(BuildContext context) {    return Row(      mainAxisAlignment: MainAxisAlignment.spaceBetween,      children: [        Container(          width: (!kIsWeb)              ? MediaQuery.sizeOf(context).width * 0.6              : MediaQuery.sizeOf(context).width * 0.25,          height: 60,          child: StreamBuilder(              stream: dropdownDataStream(),              builder: (context, snapshot) {                if (snapshot.connectionState == ConnectionState.waiting) {                  return const Center(                    child: CircularProgressIndicator(),                  );                } else if (snapshot.hasError) {                  return const Center(                    child: Text('خطأ في اتصال الخادم'),                  );                } else {                  List<String>? items = snapshot.data;                  return DropdownButtonFormField2(                    buttonStyleData: const ButtonStyleData(height: 65),                    dropdownStyleData: DropdownStyleData(                        maxHeight: 200,                        width: (!kIsWeb)                            ? MediaQuery.sizeOf(context).width * 0.51                            : MediaQuery.sizeOf(context).width * 0.20,                        padding: const EdgeInsets.all(10),                        scrollPadding: const EdgeInsets.all(6),                        scrollbarTheme: ScrollbarThemeData(                            thumbColor:                                MaterialStateProperty.all(Colors.lightGreen),                            radius: const Radius.circular(16)),                        decoration: BoxDecoration(                          borderRadius: BorderRadius.circular(16),                        )),                    decoration: InputDecoration(                      iconColor: Colors.lightGreen,                      icon: (isCou)                          ? const Icon(Icons.flag)                          : (isEmp)                              ? const Icon(Icons.person)                              : const Icon(Icons.tune),                      hintText: (isCou)                          ? 'أختر دولة: '                          : (isEmp)                              ? 'أختر موظف: '                              : 'أختر اختصاص: ',                      labelText: (isCou)                          ? ' الدولة: '                          : (isEmp)                              ? ' الموظف: '                              : ' الاختصاص: ',                      hintStyle: const TextStyle(                        fontSize: 18,                        fontWeight: FontWeight.bold,                      ),                      hoverColor: Colors.transparent,                      contentPadding:                          const EdgeInsets.symmetric(horizontal: 12),                      enabledBorder: OutlineInputBorder(                        borderSide: const BorderSide(                          color: Colors.lightGreen,                          width: 2,                        ),                        borderRadius: BorderRadius.circular(16),                      ),                      border: OutlineInputBorder(                        borderSide: const BorderSide(),                        borderRadius: BorderRadius.circular(16),                      ),                    ),                    isExpanded: true,                    items: items!                        .map((item) => DropdownMenuItem(                              alignment: Alignment.centerRight,                              value: item.toString(),                              child: Text(                                item,                                style: const TextStyle(                                  fontSize: 18,                                ),                              ),                            ))                        .toList(),                    validator: (value) {                      if (value == null) {                        return 'هذا الحقل مطلوب';                      }                      return null;                    },                    onChanged: onChanged,                  );                }              }),        ),        ElevatedButton.icon(            style: ElevatedButton.styleFrom(                backgroundColor: Colors.cyan,                padding:                    const EdgeInsets.symmetric(horizontal: 20, vertical: 4),                foregroundColor: Colors.black,                textStyle:                    const TextStyle(fontWeight: FontWeight.bold, fontSize: 16)),            onPressed: () {              showDialog<void>(                context: context,                barrierDismissible: false, // user must tap button!                builder: (ctx) {                  return Directionality(                    textDirection: TextDirection.rtl,                    child: AlertDialog(                      title: Text(                        (isCou)                            ? ' اضافة دولة جديدة '                            : (isEmp)                                ? ' اضافة موظف جديد '                                : ' اضافة اختصاص جديد ',                      ),                      content: SingleChildScrollView(                        child: Form(                          key: _formKey,                          child: TextFormField(                            controller: controller,                            validator: (String? value) {                              if (value!.isEmpty) {                                return 'هذا الحقل مطلوب';                              } else if (value.length <= 2) {                                return 'الاسم قصير';                              } else {                                return null;                              }                            },                            decoration: InputDecoration(                              label: Text(                                (isCou)                                    ? ' الدولة: '                                    : (isEmp)                                        ? ' الموظف: '                                        : ' الاختصاص: ',                                style: const TextStyle(                                  fontSize: 18,                                  fontWeight: FontWeight.bold,                                ),                              ),                              enabledBorder: OutlineInputBorder(                                borderRadius: BorderRadius.circular(16),                                borderSide: const BorderSide(                                  color: Colors.lightGreen,                                  width: 2,                                ),                              ),                              border: OutlineInputBorder(                                borderSide: const BorderSide(),                                borderRadius: BorderRadius.circular(16),                              ),                            ),                          ),                        ),                      ),                      actions: <Widget>[                        ElevatedButton(                          child: const Text(                            'الغاء',                            style: TextStyle(color: Colors.lightGreen),                          ),                          onPressed: () {                            Navigator.of(ctx).pop();                          },                        ),                        ElevatedButton(                          child: const Text(                            'اضافة',                            style: TextStyle(color: Colors.lightGreen),                          ),                          onPressed: () async {                            if (_formKey.currentState!.validate()) {                              await ((isCou)                                  ? dbcou.push().set({'text': controller.text})                                  : (isEmp)                                      ? dbemp                                          .push()                                          .set({'text': controller.text})                                      : dbspe                                          .push()                                          .set({'text': controller.text}));                              controller.clear();                              Navigator.of(ctx).pop();                            }                          },                        ),                      ],                    ),                  );                },              );            },            icon: const Icon(Icons.add),            label: const Text('اضافة'))      ],    );  }}